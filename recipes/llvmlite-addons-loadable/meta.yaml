{% set VERSION_SUFFIX = "" %} # debug version suffix, appended to the version

package:
  name: llvmlite-addons-enabled
  # GIT_DESCRIBE_TAG may not be set
  version: {{ "%s%s" % (environ.get('GIT_DESCRIBE_TAG', '').lstrip('v'), VERSION_SUFFIX) }}

source:
  url: https://github.com/numba/llvmlite/archive/refs/tags/v0.40.0dev0.tar.gz
  sha256: 50b5e0cf7c1c3cfaa41d857626e3ce3fe77d8281f505ea248cacebf3af6c352d

build:
  number: {{ environ.get('GIT_DESCRIBE_NUMBER', 0) }}
  script_env:
    - PY_VCRUNTIME_REDIST
    - LLVMLITE_SHARED
    - LLVMLITE_USE_CMAKE

requirements:
  build:
    # We cannot do this on macOS as the llvm-config from the
    # toolchain conflicts with the same from llvmdev, the
    # build.sh deals with it!
    - {{ compiler('c') }}    # [not (osx or armv6l or armv7l or win)]
    - {{ compiler('cxx') }}  # [not (osx or armv6l or armv7l or win)]
    - cmake          # [win]
    - make           # [unix and not (armv6l or armv7l or aarch64)]
  host:
    - python 3.9
    - numpy 1.19
    # On channel https://anaconda.org/ludgerpaehler/
    - llvmdev-addons-enabled 11.1.0
    # llvmdev is built with libz compression support
    - zlib           # [unix and not (armv6l or armv7l or aarch64)]
  run:
    - python 3.9
    - numpy 1.19
    # osx has dynamically linked libstdc++
    - libcxx >=4.0.1 # [osx]

test:
  imports:
    - llvmlite
    - llvmlite.binding
  commands:
    - python -m llvmlite.tests

about:
  home: https://github.com/numba/llvmlite
  license: New BSD License
  summary: A lightweight LLVM python binding for writing JIT compilers
